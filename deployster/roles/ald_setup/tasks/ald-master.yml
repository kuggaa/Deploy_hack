#
# © ОАО «Северное ПКБ», 2014
#
---
#- name: остановка OpenLDAP и ALD
#  service: name={{ item }} state=stopped
#  with_items: [aldd, aldcd, nscd, nslcd, slapd]

#- name: создание каталога LDAP на общем хранилище
#  file: path={{ gluster.mount_point }}/ldap state=directory
#        owner=openldap group=openldap mode=0700

#- name: перенос на Gluster базы LDAP
#  command: cp -pfR /var/lib/ldap {{ gluster.mount_point }}

#- name: удаление старой базы LDAP
#  command: rm -rf /var/lib/ldap removes=/var/lib/ldap

#- name: подмена каталога /var/lib/ldap
#  file: src={{ gluster.mount_point }}/ldap dest=/var/lib/ldap state=link
#  mount: name=/var/lib/ldap src={{ gluster.mount_point }}/ldap
#         fstype=none opts=bind state=mounted

#- name: создание каталога Kerberos на общем хранилище
#  file: path={{ gluster.mount_point }}/krb5kdc state=directory
#        owner=root group=root mode=0700

#- name: остановка сервисов Kerberos
#  service: name={{ item }} state=stopped
#  with_items: [krb5-kdc, krb5-admin-server]

#- name: перенос на Gluster базы Kerberos
#  command: cp -pfR /var/lib/krb5kdc {{ gluster.mount_point }}

#- name: удаление старой базы Kerberos
#  command: rm -rf /var/lib/krb5kdc removes=/var/lib/krb5kdc

#- name: подмена каталога /var/lib/krb5kdc
#  file: src={{ gluster.mount_point }}/krb5kdc dest=/var/lib/krb5kdc state=link
#  mount: name=/var/lib/krb5kdc src={{ gluster.mount_point }}/krb5kdc
#         fstype=none opts=bind state=mounted

- name: запуск сервисов ALD
  service: name={{ item }} state=started
  with_items: [krb5-kdc, krb5-admin-server, slapd, nscd, nslcd, aldcd, aldd]

- name: пауза
  pause: seconds=3

- name: создание приципала для ПК Управления
  command: ald-admin service-add HTTP/{{ hac_cntrl.name }}.{{ ald.domain }} -f --pass-file=/root/pass-file

- name: добавление приципала для ПК Управления в группу mac
  command: ald-admin sgroup-svc-add HTTP/{{ hac_cntrl.name }}.{{ ald.domain }} --sgroup=mac --pass-file=/root/pass-file

- name: создание keytab для apache
  command: ald-client update-svc-keytab HTTP/{{ hac_cntrl.name }}.{{ ald.domain }} --ktfile=/root/krb.keytab --pass-file=/root/pass-file

- name: сохранение keytab для передачи клиентам ald
  fetch: src=/root/krb.keytab dest=roles/ald_setup/files/krb.keytab validate_md5=yes flat=yes fail_on_missing=yes

- name: создание групп пользователей
  ald: task=group group={{ item }} pass_file=/root/pass-file
  with_items: ald.groups
  tags: users

- name: создание учетной записи администратора в ALD
  ald: task=user pass_file=/root/pass-file group={{ ald.groups[0] }}
       full_name='Administrator' user_desc='Administrator HAC' user={{ ald.kvg_admin_name }}
  register: create_users
  tags: users

- name: создание учетной записи оператора в ALD
  ald: task=user pass_file=/root/pass-file group={{ ald.groups[1] }}
       full_name='User' user_desc='User HAC' user={{ ald.operator_user }}
  tags: users

- name: ожидание создания пользователей
  pause: seconds=60 prompt="wait please..."
  when: create_users.changed
  tags: users

#- name: Добавление пользователя в группу administrators
#  command: ald-admin group-mod {{ item }} -f --pass-file=/root/pass-file --add-users --user={{ ald.kvg_admin_name }}
#  with_items: ald.groups
#  when: inventory_hostname == ald.master_ald_srv

- name: добавление привилегий для администратора
  command: ald-admin user-ald-cap {{ ald.kvg_admin_name }} -f --pass-file=/root/pass-file --c-admin=1 --c-all-hosts-add=1 --c-adm-user=1
  tags: users

- name: настройка доступа для администраторов
  command: ald-admin user-ald-cap {{ ald.kvg_admin_name }} -f --pass-file=/root/pass-file --add-hosts --host={{ item }}.{{ ald.domain }}
  with_items: groups.nodes
  tags: users

- name: настройка доступа для пользователей
  command: ald-admin user-ald-cap {{ ald.operator_user }} -f --pass-file=/root/pass-file --add-hosts --host={{ item }}.{{ ald.domain }}
  with_items: groups.nodes
  tags: users

- name: создание дампа БД Kerberos
  command: kdb5_util dump /var/lib/krb5kdc/slave_datatrans

- name: синхронизация БД Kerberos
  command: kprop {{ item }}
  with_items: groups.nodes[1:]
