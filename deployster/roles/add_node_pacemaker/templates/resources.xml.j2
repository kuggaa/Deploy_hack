<resources>
{% for host in groups['new_nodes'] %}
      <primitive class="stonith" id="stonith_{{ host }}" type="fence_ipmilan">
        <meta_attributes id="stonith_{{ host }}-meta_attributes">
          <nvpair id="stonith_{{ host }}-meta_attributes-target-role" name="target-role" value="Started"/>
        </meta_attributes>
        <operations id="stonith_{{ host }}-operations">
          <op id="stonith_{{ host }}-op-monitor-20" interval="20" name="monitor" timeout="20"/>
          <op id="stonith_{{ host }}-op-start-0" interval="0" name="start" on-fail="restart" start-delay="5" timeout="120"/>
          <op id="stonith_{{ host }}-op-stop-0" interval="0" name="stop" timeout="60"/>
        </operations>
        <instance_attributes id="stonith_{{ host }}-instance_attributes">
          <nvpair id="stonith_{{ host }}-instance_attributes-pcmk_host_list" name="pcmk_host_list" value="{{ host }}"/>
          <nvpair id="stonith_{{ host }}-instance_attributes-ipaddr" name="ipaddr" value="{{ network.control.address }}.{{ nodes_ip_ipmi[host] }}"/>
          <nvpair id="stonith_{{ host }}-instance_attributes-login" name="login" value="{{ ipmi.login }}"/>
          <nvpair id="stonith_{{ host }}-instance_attributes-passwd" name="passwd" value="{{ ipmi.password }}"/>
          <nvpair id="stonith_{{ host }}-instance_attributes-lanplus" name="lanplus" value="true"/>
          <nvpair id="stonith_{{ host }}-instance_attributes-auth" name="auth" value="password"/>
          <nvpair id="stonith_{{ host }}-instance_attributes-pcmk_reboot_action" name="pcmk_reboot_action" value="reboot"/>
        </instance_attributes>
      </primitive>
{% endfor %}
{% if pdu_fencing is defined and pdu_fencing%}
{% for row in pdu_fencing %}
{% if row.pdu is defined and row.pdu and row.nodes is defined and row.nodes %}
{% for key, value in row.nodes.iteritems() %}
{% for ip in row.pdu %}
      <primitive class="stonith" id="fence_{{ key }}_pdu{{ ip }}_on" type="fence_apc_snmp">
        <meta_attributes id="fence_{{ key }}_pdu{{ ip }}_on-meta_attributes">
          <nvpair id="fence_{{ key }}_pdu{{ ip }}_on-meta_attributes-target-role" name="target-role" value="Started"/>
        </meta_attributes>
        <instance_attributes id="fence_{{ key }}_pdu{{ ip }}_on-instance_attributes">
          <nvpair id="fence_{{ key }}_pdu{{ ip }}_on-instance_attributes-ipaddr" name="ipaddr" value="{{ network.control.address }}.{{ value }}"/>
          <nvpair id="fence_{{ key }}_pdu{{ ip }}_on-instance_attributes-pcmk_reboot_action" name="pcmk_reboot_action" value="on"/>
          <nvpair id="fence_{{ key }}_pdu{{ ip }}_on-instance_attributes-port" name="port" value="{{ value }}"/>
          <nvpair id="fence_{{ key }}_pdu{{ ip }}_on-instance_attributes-pcmk_host_list" name="pcmk_host_list" value="{{ key }}"/>
        </instance_attributes>
        <operations>
          <op id="fence_{{ key }}_pdu{{ ip }}_on-monitor-60s" interval="60s" name="monitor"/>
          <op id="fence_{{ key }}_pdu{{ ip }}_on-op-start-0" interval="0" name="start" on-fail="restart" start-delay="5" timeout="120"/>
          <op id="fence_{{ key }}_pdu{{ ip }}_on-op-stop-0" interval="0" name="stop" timeout="60"/>
        </operations>
      </primitive>
      <primitive class="stonith" id="fence_{{ key }}_pdu{{ ip }}_off" type="fence_apc_snmp">
        <meta_attributes id="fence_{{ key }}_pdu{{ ip }}_off-meta_attributes">
          <nvpair id="fence_{{ key }}_pdu{{ ip }}_off-meta_attributes-target-role" name="target-role" value="Started"/>
        </meta_attributes>
        <instance_attributes id="fence_{{ key }}_pdu{{ ip }}_off-instance_attributes">
          <nvpair id="fence_{{ key }}_pdu{{ ip }}_off-instance_attributes-ipaddr" name="ipaddr" value="{{ network.control.address }}.{{ value }}"/>
          <nvpair id="fence_{{ key }}_pdu{{ ip }}_off-instance_attributes-pcmk_reboot_action" name="pcmk_reboot_action" value="off"/>
          <nvpair id="fence_{{ key }}_pdu{{ ip }}_off-instance_attributes-port" name="port" value="{{ value }}"/>
          <nvpair id="fence_{{ key }}_pdu{{ ip }}_off-instance_attributes-pcmk_host_list" name="pcmk_host_list" value="{{ key }}"/>
         {% if loop.last %}<nvpair id="fence_{{ key }}_pdu{{ ip }}_off-instance_attributes-power_wait" name="power_wait" value="5"/>{% endif %}
        </instance_attributes>
        <operations>
          <op id="fence_{{ key }}_pdu{{ ip }}_off-monitor-60s" interval="60s" name="monitor"/>
          <op id="fence_{{ key }}_pdu{{ ip }}_off-op-start-0" interval="0" name="start" on-fail="restart" start-delay="5" timeout="120"/>
          <op id="fence_{{ key }}_pdu{{ ip }}_off-op-stop-0" interval="0" name="stop" timeout="60"/>
        </operations>
      </primitive>
{% endfor %}
{% endfor %}
{% endif %}
{% endfor %}
{% endif %}
</resources>
